export const FILTER_ORDER = [
  "Category",
  "Typology",
  "Style",
  "Climate Adaptability",
  "Terrain",
  "Material Used",
  "Interior Layout",
  "Roof Type",
  "Exterior",
  "Additional Features",
  "Sustainability",
];

export const FILTER_SETS = {
  Category: [
    "Residential",
    "Commercial",
    "Industrial",
    "Recreational",
    "Institutional",
    "Agricultural",
    "Mixed-Use",
    "Infrastructural",
  ],
  Typology: [
    "Apartment",
    "Condominium",
    "Single-Family House",
    "Villa",
    "Bungalow",
    "Duplex",
    "Retail Store",
    "Office Building",
    "Co-working Hub",
    "Hotel",
    "Resort",
    "Factory",
    "Studio Loft",
  ],
  Style: [
    "Modern",
    "Contemporary",
    "Minimalist",
    "Industrial",
    "Scandinavian",
    "Sustainable",
    "Neo-Futurism",
    "Postmodern",
    "Classical Revival",
  ],
  "Climate Adaptability": [
    "Hot & Dry",
    "Hot & Humid",
    "Temperate",
    "Composite",
    "Cold",
    "Tropical",
  ],
  Terrain: [
    "Flat",
    "Sloping",
    "Hilly",
    "Mountainous",
    "Coastal",
    "Urban Core",
    "Waterfront",
  ],
  "Material Used": [
    "Concrete",
    "Steel",
    "Glass",
    "Brick",
    "Timber",
    "Bamboo",
    "Rammed Earth",
    "Stone",
    "CSEB",
  ],
  "Interior Layout": [
    "Open Plan",
    "Closed Plan",
    "Linear",
    "Centralized",
    "Radial",
    "Adaptive Reuse",
  ],
  "Roof Type": [
    "Flat Roof",
    "Gable Roof",
    "Hip Roof",
    "Butterfly Roof",
    "Green Roof",
    "Curved Roof",
  ],
  Exterior: [
    "Courtyard",
    "Atrium",
    "Sky Garden",
    "Rooftop Lounge",
    "Outdoor Workspace",
    "Interactive FaÃ§ade",
  ],
  "Additional Features": [
    "Co-living Pods",
    "Wellness Centre",
    "EV Charging",
    "Smart Home Suite",
    "Retail Podium",
    "Maker Space",
    "Childcare Hub",
  ],
  Sustainability: [
    "Passive Cooling",
    "Net-Zero Ready",
    "Solar Integration",
    "Rainwater Harvesting",
    "Cross Ventilation",
    "High Thermal Mass",
  ],
};

export const createEmptyFilterState = () =>
  Object.fromEntries(FILTER_ORDER.map((key) => [key, new Set()]));
